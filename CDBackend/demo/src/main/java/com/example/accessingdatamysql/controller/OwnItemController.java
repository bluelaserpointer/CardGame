package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.entity.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
// import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

// import java.sql.Timestamp;
import java.util.*;

// import javax.validation.constraints.Null;

import com.example.accessingdatamysql.service.OwnItemService;

@CrossOrigin(origins = "*")
@RestController // This means that this class is a Controller
@RequestMapping(path = "/ownItem") // This means URL's start with /demo (after Application path)
public class OwnItemController {
  @Autowired // This means to get the bean called OwnItemRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private OwnItemService OwnItemService;

  @RequestMapping(value = "/getOwnItem")
  public OwnItem findOwnItemByOwnItemId(@RequestParam("ownItemId") Integer ownItemId) {
    return OwnItemService.getOneOwnItem(ownItemId);
  }

  @RequestMapping(value = "/addOwnItem")
  public @ResponseBody OwnItem addNewOwnItem(@RequestParam("userId") Integer userId,
      @RequestParam("itemId") Integer itemId, @RequestParam("itemCount") Integer itemCount) {
    return OwnItemService.addNewOwnItem(userId, itemId, itemCount);
  }

  @RequestMapping(value = "/updateOwnItem")
  public @ResponseBody OwnItem updateOwnItem(@RequestParam("ownItemId") Integer ownItemId,
      @RequestParam("userId") Integer userId, @RequestParam("itemId") Integer itemId,
      @RequestParam("itemCount") Integer itemCount) {
    return OwnItemService.updateOwnItem(ownItemId, userId, itemId, itemCount);
  }

  @RequestMapping(value = "/getAllOwnItems")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public List<OwnItem> getAllOwnItems() {
    return OwnItemService.getAllOwnItems();
  }

  @RequestMapping(value = "/deleteOwnItems")
  public String deleteOwnItems(@RequestParam("ownItemIds") List<Integer> ownItemIds) {
    return OwnItemService.deleteOwnItems(ownItemIds);
  }

  @RequestMapping(value = "/deleteAllOwnItems")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public String deleteAll() {
    return OwnItemService.deleteAll();
  }

  @RequestMapping(value = "/deleteOwnItem")
  public List<OwnItem> deleteOwnItem(@RequestParam("userId") Integer userId, @RequestParam("itemId") Integer itemId) {
    System.out.println("In controller");
    return OwnItemService.deleteOwnItem(userId, itemId);
  }

}
