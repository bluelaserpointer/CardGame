package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.entity.*;
import org.springframework.beans.factory.annotation.Autowired;
// import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

// import java.sql.Timestamp;
import java.util.*;

// import javax.validation.constraints.Null;

import com.example.accessingdatamysql.service.OwnCardService;

@CrossOrigin(origins = "*")
@RestController // This means that this class is a Controller
@RequestMapping(path = "/ownCard") // This means URL's start with /demo (after Application path)
public class OwnCardController {
  @Autowired // This means to get the bean called OwnCardRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private OwnCardService OwnCardService;

  @RequestMapping(value = "/getOwnCard")
  public OwnCard findOwnCardByOwnCardId(@RequestParam("ownCardId") Integer ownCardId) {
    return OwnCardService.getOneOwnCard(ownCardId);
  }

  @RequestMapping(value = "/addOwnCard")
  public @ResponseBody String addNewOwnCard(@RequestParam("userId") Integer userId,
      @RequestParam("cardId") Integer cardId) {
    return OwnCardService.addNewOwnCard(userId, cardId);
  }

  // @RequestMapping(value = "/updateOwnCard")
  // public @ResponseBody String updateOwnCard(@RequestParam("ownCardId") Integer
  // ownCardId,
  // @RequestParam("OwnCardName") String OwnCardName, @RequestParam("OwnCardImg")
  // String OwnCardImg,
  // @RequestParam("OwnCardDescription") String OwnCardDescription) {
  // return OwnCardService.updateOwnCard(ownCardId, OwnCardName, OwnCardImg,
  // OwnCardDescription);
  // }

  @RequestMapping(value = "/getAllOwnCards")
  public List<OwnCard> getAllOwnCards() {
    return OwnCardService.getAllOwnCards();
  }

  @RequestMapping(value = "/deleteOwnCards")
  public String deleteOwnCards(@RequestParam("ownCardIds") List<Integer> ownCardIds) {
    return OwnCardService.deleteOwnCards(ownCardIds);
  }

  @RequestMapping(value = "/deleteAllOwnCards")
  public String deleteAll() {
    return OwnCardService.deleteAll();
  }

  @RequestMapping(value = "/deleteOwnCard")
  public List<OwnCard> deleteOwnCard(@RequestParam("userId") Integer userId, @RequestParam("cardId") Integer cardId)
  {
    return OwnCardService.deleteOwnCard(userId, cardId);
  }
}
