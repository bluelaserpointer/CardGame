package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.entity.*;
import org.springframework.beans.factory.annotation.Autowired;
// import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

// import java.sql.Timestamp;
import java.util.*;

// import javax.validation.constraints.Null;

import com.example.accessingdatamysql.service.AdminService;

@CrossOrigin(origins = "*")
@RestController // This means that this class is a Controller
@RequestMapping(path = "/admin") // This means URL's start with /demo (after Application path)
public class AdminController {
  @Autowired // This means to get the bean called AdminRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private AdminService AdminService;

  @RequestMapping(value = "/getAdmin")
  public Admin findAdminByAdminId(@RequestParam("adminId") Integer adminId) {
    return AdminService.getOneAdmin(adminId);
  }

  @RequestMapping(value = "/addAdmin")
  public @ResponseBody String addNewAdmin(@RequestParam("adminName") String adminName,
      @RequestParam("password") String password) {
    return AdminService.addNewAdmin(adminName, password);
  }

  @RequestMapping(value = "/updateAdmin")
  public @ResponseBody String updateAdmin(@RequestParam("adminId") Integer adminId,
      @RequestParam("adminName") String adminName, @RequestParam("password") String password) {
    return AdminService.updateAdmin(adminId, adminName, password);
  }

  @RequestMapping(value = "/getAllAdmins")
  public List<Admin> getAllAdmins() {
    return AdminService.getAllAdmins();
  }

  @RequestMapping(value = "/deleteAdmins")
  public String deleteAdmins(@RequestParam("adminIds") List<Integer> adminIds) {
    return AdminService.deleteAdmins(adminIds);
  }

  @RequestMapping(value = "/deleteAllAdmins")
  public String deleteAll() {
    return AdminService.deleteAll();
  }

  @RequestMapping(value = "/identifyAdmin")
  public boolean identifyAdmin(@RequestParam("adminName") String adminName, @RequestParam("password") String password)
  {
    System.out.println(adminName);
    System.out.println(password);
    return AdminService.identifyAdmin(adminName, password);
  }

  @RequestMapping(value = "/deleteAdmin")
  public List<Admin> deleteAdmin(@RequestParam("adminId") Integer adminId)
  {
    return AdminService.deleteAdmin(adminId);
  }

}
