package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.entity.*;
import org.springframework.beans.factory.annotation.Autowired;
// import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

import java.sql.Timestamp;
import java.util.*;

// import javax.validation.constraints.Null;

import com.example.accessingdatamysql.service.ActivityService;

@CrossOrigin(origins = "*")
@RestController // This means that this class is a Controller
@RequestMapping(path = "/activity") // This means URL's start with /demo (after Application path)
public class ActivityController {
  @Autowired // This means to get the bean called ActivityRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private ActivityService ActivityService;

  @RequestMapping(value = "/getActivity")
  public Activity findActivityByActivityId(@RequestParam("activityId") Integer activityId) {
    return ActivityService.getOneActivity(activityId);
  }

  @RequestMapping(value = "/addActivity")
  public @ResponseBody String addNewActivity(@RequestParam("activityName") String activityName,
      @RequestParam("activityImg") String activityImg, @RequestParam("activityDescription") String activityDescription,
      @RequestParam("start") Timestamp start, @RequestParam("type") String type) {
    return ActivityService.addNewActivity(type, activityName, activityImg, activityDescription, start);

  }

  @RequestMapping(value = "/updateActivity")
  public @ResponseBody String updateActivity(@RequestParam("activityId") Integer activityId,
      @RequestParam("activityName") String activityName, @RequestParam("activityImg") String activityImg,
      @RequestParam("activityDescription") String activityDescription, @RequestParam("start") Timestamp start,
      @RequestParam("type") String type) {
    return ActivityService.updateActivity(activityId, type, activityName, activityImg, activityDescription, start);
  }

  @RequestMapping(value = "/getAllActivities")
  public List<Activity> getAllActivitys() {
    return ActivityService.getAllActivities();
  }

  @RequestMapping(value = "/deleteActivities")
  public String deleteActivitys(@RequestParam("activityIds") List<Integer> activityIds) {
    return ActivityService.deleteActivities(activityIds);
  }

  @RequestMapping(value = "/deleteAllActivities")
  public String deleteAll() {
    return ActivityService.deleteAll();
  }

  @RequestMapping(value = "/deleteActivity")
  public List<Activity> deleteActivity(@RequestParam("activityId") Integer activityId)
  {
    return ActivityService.deleteActivity(activityId);
  }
}
