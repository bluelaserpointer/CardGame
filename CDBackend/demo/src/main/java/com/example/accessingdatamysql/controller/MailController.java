package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.entity.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
// import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

// import java.sql.Timestamp;
import java.util.*;

// import javax.validation.constraints.Null;

import com.example.accessingdatamysql.service.MailService;

@CrossOrigin(origins = "*")
@RestController // This means that this class is a Controller
@RequestMapping(path = "/mail") // This means URL's start with /demo (after Application path)
public class MailController {
  @Autowired // This means to get the bean called MailRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private MailService MailService;

  // 获取一个已编辑好的邮件信息
  @RequestMapping(value = "/getMail")
  public Mail findMailByMailId(@RequestParam("mailId") Integer mailId) {
    return MailService.getOneMail(mailId);
  }

  // 增加一个邮件（还未发送）
  @RequestMapping(value = "/addMail")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public @ResponseBody Mail addNewMail(@RequestBody Mail newMail) {
    return MailService.addNewMail(newMail);
  }

  // 更新一个邮件信息
  @RequestMapping(value = "/updateMail")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public @ResponseBody Mail updateMail(@RequestBody Mail updateMail) {
    return MailService.updateMail(updateMail);
  }

  // 获取所有邮件信息
  @RequestMapping(value = "/getAllMails")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public List<Mail> getAllMails() {
    return MailService.getAllMails();
  }

  // 删除一部分邮件
  @RequestMapping(value = "/deleteMails")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public String deleteMails(@RequestParam("mailIds") List<Integer> mailIds) {
    return MailService.deleteMails(mailIds);
  }

  // 删除所有邮件
  @RequestMapping(value = "/deleteAllMails")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public String deleteAll() {
    return MailService.deleteAll();
  }

  // 删除邮件
  @RequestMapping(value = "/deleteMail")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public List<Mail> deleteMail(@RequestParam("mailId") Integer mailId) {
    return MailService.deleteMail(mailId);
  }

  // 发送邮件给指定用户
  @RequestMapping(value = "sendMail")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public MailBox sendMail(@RequestParam("mailId") Integer mailId, @RequestParam("userId") Integer userId) {
    return MailService.sendMail(mailId, userId);
  }

  // 发送邮件给所有用户
  @RequestMapping(value = "sendMailToAllUsers")
  @PreAuthorize("hasRole('ROLE_ADMIN')")
  public Mail sendMailToAllUsers(@RequestParam("mailId") Integer mailId) {
    return MailService.sendMailToAllUsers(mailId);
  }

  // TODO 删除指定用户指定邮件

  // TODO 删除所有用户指定邮件
}
