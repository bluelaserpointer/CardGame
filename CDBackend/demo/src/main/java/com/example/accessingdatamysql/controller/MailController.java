package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.entity.*;
import org.springframework.beans.factory.annotation.Autowired;
// import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

// import java.sql.Timestamp;
import java.util.*;

// import javax.validation.constraints.Null;

import com.example.accessingdatamysql.service.MailService;

@CrossOrigin(origins = "*")
@RestController // This means that this class is a Controller
@RequestMapping(path = "/mail") // This means URL's start with /demo (after Application path)
public class MailController {
  @Autowired // This means to get the bean called MailRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private MailService MailService;

  @RequestMapping(value = "/getMail")
  public Mail findMailByMailId(@RequestParam("mailId") Integer mailId) {
    return MailService.getOneMail(mailId);
  }

  @RequestMapping(value = "/addMail")
  public @ResponseBody String addNewMail(@RequestParam("mailName") String mailName,
      @RequestParam("mailImg") String mailImg, @RequestParam("mailDescription") String mailDescription) {
    return MailService.addNewMail(mailName, mailImg, mailDescription);
  }

  @RequestMapping(value = "/updateMail")
  public @ResponseBody String updateMail(@RequestParam("mailId") Integer mailId,
      @RequestParam("mailName") String mailName, @RequestParam("mailImg") String mailImg,
      @RequestParam("mailDescription") String mailDescription) {
    return MailService.updateMail(mailId, mailName, mailImg, mailDescription);
  }

  @RequestMapping(value = "/getAllMails")
  public List<Mail> getAllMails() {
    return MailService.getAllMails();
  }

  @RequestMapping(value = "/deleteMails")
  public String deleteMails(@RequestParam("mailIds") List<Integer> mailIds) {
    return MailService.deleteMails(mailIds);
  }

  @RequestMapping(value = "/deleteAllMails")
  public String deleteAll() {
    return MailService.deleteAll();
  }

  @RequestMapping(value = "/deleteMail")
  public List<Mail> deleteMail(@RequestParam("mailId") Integer mailId)
  {
    return MailService.deleteMail(mailId);
  }
}
